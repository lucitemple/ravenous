{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Business","className","src","this","props","business","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","id","SearchBar","term","location","sortBy","handleLocationChange","bind","handleTermChange","handleSearch","sortByOptions","sortByOption","setState","event","target","value","searchYelp","preventDefault","Object","keys","sortByOptionKey","sortByOptionValue","getSortByClass","onClick","handleSortByChange","renderSortByOptions","onChange","placeholder","href","apiKey","process","Yelp","fetch","headers","Authorization","then","response","json","jsonResponse","categories","title","review_count","url","image_url","country","zip_code","address1","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dde32c82.chunk.js","sourcesContent":["\nimport React from \"react\";\nimport './Business.css';\n\nexport default class Business extends React.Component {\n    render() {\n\n        return (\n          <div className=\"Business\">\n            <div className=\"image-container\">\n              <img src={this.props.business.imageSrc} alt=\"\" />\n            </div>\n            <h2>{this.props.business.name}</h2>\n            <div className=\"Business-information\">\n              <div className=\"Business-address\">\n                <p>{this.props.business.address}</p>\n                <p>{this.props.business.city}</p>\n                <p>\n                  {this.props.business.state} {this.props.business.zipCode}\n                </p>\n              </div>\n              <div className=\"Business-reviews\">\n                <h3>{this.props.business.category}</h3>\n                <h3 className=\"rating\">{this.props.business.rating}</h3>\n                <p>{this.props.business.reviewCount} reviews</p>\n              </div>\n            </div>\n          </div>\n        );\n    }\n};\n","import React from \"react\";\nimport \"./BusinessList.css\";\nimport Business from \"../Business/Business\";\n\nexport default class BusinessList extends React.Component {\n  render() {\n    return (\n      <div className=\"BusinessList\">\n        {this.props.businesses.map(business => \n          <Business key={business.id} business={business} /> )\n          }\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./SearchBar.css\";\n\n/* const sortByOptions = {\n  \"Best Match\": \"best_match\",\n  \"Highest Rated\": \"rating\",\n  \"Most Reviewed\": \"review_count\",\n}; */\n\nexport default class SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: \"\",\n      location: \"\",\n      sortBy: \"best_match\",\n    };\n\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n\n    this.sortByOptions = {\n      \"Best Match\": \"best_match\",\n      \"Highest Rated\": \"rating\",\n      \"Most Reviewed\": \"review_count\",\n    };\n  }\n\n  getSortByClass(sortByOption) {\n    return this.state.sortBy === sortByOption ? \"active\" : \"\";\n  }\n\n  handleSortByChange(sortByOption) {\n    this.setState({ sortBy: sortByOption});\n  }\n\n  handleTermChange(event) {\n    this.setState({ term: event.target.value });\n  }\n\n  handleLocationChange(event) {\n    this.setState({ location: event.target.value });\n  }\n\n  handleSearch(event) {\n    this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n    event.preventDefault();\n  }\n\n  renderSortByOptions() {\n    return Object.keys(this.sortByOptions).map((sortByOptionKey) => {\n      let sortByOptionValue = this.sortByOptions[sortByOptionKey];\n      return (\n        <li\n          key={sortByOptionValue}\n          className={this.getSortByClass(sortByOptionValue)}\n          onClick={this.handleSortByChange.bind(this, sortByOptionValue)}\n        >\n          {sortByOptionKey}\n        </li>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <div className=\"SearchBar-sort-options\">\n          <ul>{this.renderSortByOptions()}</ul>\n        </div>\n        <div className=\"SearchBar-fields\">\n          <input onChange={this.handleTermChange} placeholder=\"Search Businesses\" />\n          <input onChange={this.handleLocationChange} placeholder=\"Where?\" />\n        </div>\n        <div className=\"SearchBar-submit\">\n          <a href=\"http://\" onClick={this.handleSearch}>Let's Go</a>\n        </div>\n      </div>\n    );\n  }\n}\n","const apiKey = `${process.env.REACT_APP_YELP_API_KEY}`;\n// githubPages url https://lucitemple.github.io/ravenous/\n// netlify url https://ravenous-restuarants.netlify.app/\n\nexport const Yelp = {\n  search(term, location, sortBy) {\n    // temporarily bypass CORS restrictions https://cors-anywhere.herokuapp.com/corsdemo\n    return fetch(\n      `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`,\n      {\n        /*         method: 'GET',\n        mode: \"no-cors\", */\n        headers: {\n          Authorization: `Bearer ${apiKey}`,\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((jsonResponse) => {\n        //check if the jsonResponse has a businesses key\n        // to ensure a valid response has been returned from YelpAPI\n        if (jsonResponse.businesses) {\n          return jsonResponse.businesses.map((business) => {\n            return {\n              rating: business.rating,\n              id: business.id,\n              category: business.categories[0].title,\n              reviewCount: business.review_count,\n              name: business.name,\n              url: business.url,\n              imageSrc: business.image_url,\n              city: business.location.city,\n              state: business.location.state,\n              country: business.location.country,\n              zipCode: business.location.zip_code,\n              address: business.location.address1,\n            };\n          });\n        }\n      });\n  },\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport BusinessList from \"../BusinessList/BusinessList.js\";\nimport SearchBar from \"../SearchBar/SearchBar.js\";\nimport { Yelp } from \"../../util/Yelp.js\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      businesses: [],\n    };\n\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n\n  searchYelp(term, location, sortBy) {\n    Yelp.search(term, location, sortBy).then(businesses => {\n      return this.setState({businesses: businesses});\n    })\n    ;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>ravenous</h1>\n        <SearchBar searchYelp={this.searchYelp} />\n        <BusinessList businesses={this.state.businesses} />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}